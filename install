#!/bin/bash

# colors
nc="\033[0m"
white="\033[1;37m"
green="\033[0;32m"
red="\033[0;31m"
gray="\033[0;37m"

# configuration
declare -a exclusions=(
  "."
  ".."
  ".git"
  ".gitignore"
  "install",
  "README.md",
  ".DS_Store"
)

home_directory="$HOME/"
repo_directory="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/"

# parse options
usage() { 
  echo "usage: install [-chv]" 1>&2; exit 1; 
}

while getopts ":chv" option; do
  case "${option}" in
    c) clean_links=1 ;;
    v) verbose=1 ;;
    h) usage ;;
  esac
done

# helpers
prompt_for_skip() {
  while true; do
    read result
    case $result in
      [Bb]* ) echo 0; break;;
      [Ss]* ) echo 1; break;;
    esac
  done
}

# main
# - link configs
for entry in * .*; do
  if [[ ${exclusions[*]} =~ $entry ]]; then # ignore any results from the exclusions array
    continue
  fi

  home_filepath=$home_directory$entry
  repo_filepath=$repo_directory$entry
  
  # if we"re in clean mode, we"re going to see if each item is a symlink, and if so remove it
  if [ -n "${clean_links}" ]; then 
    if [ -L $home_filepath ]; then
      echo -e "${red}✗ ${white}removing link: ${gray}$home_filepath${nc}"
      rm -r $home_filepath
    fi
    continue
  fi 
 
  # otherwise, in the normal mode we"re going to check the filetype to determine which operation to perform 
  if [ -L $home_filepath ]; then # the file in the home dir is already a link
    echo -e "${green}✓ ${white}link exists: ${gray}$home_filepath${nc}"
    continue
  elif [ -e $home_filepath ]; then # if the home file exists
    echo -e "${red}✗ ${white}file exists: ${gray}$home_filepath${white}. (b)ackup or (s)kip?${nc}"
    if [ $(prompt_for_skip) == "1" ]; then # and if we elect to skip linking it
      continue
    else # otherwise rename the file to a backup filename
      mv -f $home_filepath "$home_filepath.bak"
    fi
  else
    echo -e "${green}• ${white}file did not exist, linking: ${gray}$home_filepath${nc}"
  fi

  ln -sF $repo_filepath $home_filepath
done

# - install brew if necessary
if ! [ -x "$(command -v brew)" ]; then
  echo -e "${green}• ${white}brew was not installed, installing${nc}"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
  echo -e "${green}✓ ${white}brew exists: ${gray}$(which brew)${nc}"
fi

# - install brew packages
echo -e "${green}• ${white}installing brew packages${nc}"

if [ -n "${verbose}" ]; then
  brew bundle --global -v
else
  brew bundle --global
fi

# - install vim plugins
echo -e "${green}• ${white}installing vim plugins${nc}"
vim +"PlugInstall" +qall &> /dev/null

